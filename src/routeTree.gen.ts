/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'
import { Route as SigninRouteImport } from './routes/signin'
import { Route as OrganizationLoadingRouteImport } from './routes/organization-loading'
import { Route as FormBuilderRouteImport } from './routes/formBuilder'
import { Route as MainLayoutRouteImport } from './routes/_mainLayout'
import { Route as IndexRouteImport } from './routes/index'
import { Route as JoinOrganizationIndexRouteImport } from './routes/join-organization/index'
import { Route as FormsIndexRouteImport } from './routes/forms/index'
import { Route as ForgotPasswordIndexRouteImport } from './routes/forgot-password/index'
import { Route as JoinOrganizationVerifyRouteImport } from './routes/join-organization/verify'
import { Route as ForgotPasswordVerifyRouteImport } from './routes/forgot-password/verify'
import { Route as FormsForm_idIndexRouteImport } from './routes/forms/$form_id/index'
import { Route as MainLayoutUsersIndexRouteImport } from './routes/_mainLayout/users/index'
import { Route as MainLayoutRegionsIndexRouteImport } from './routes/_mainLayout/regions/index'
import { Route as MainLayoutOrganisationsIndexRouteImport } from './routes/_mainLayout/organisations/index'
import { Route as MainLayoutEventsIndexRouteImport } from './routes/_mainLayout/events/index'
import { Route as MainLayoutContactsIndexRouteImport } from './routes/_mainLayout/contacts/index'
import { Route as FormsForm_idSuccessRouteImport } from './routes/forms/$form_id/success'
import { Route as FormsForm_idFormLayoutRouteImport } from './routes/forms/$form_id/_formLayout'
import { Route as MainLayoutUsersAddUserRouteImport } from './routes/_mainLayout/users/add-user'
import { Route as MainLayoutOrganisationsAddOrganisationRouteImport } from './routes/_mainLayout/organisations/add-organisation'
import { Route as MainLayoutEventsAddEventRouteImport } from './routes/_mainLayout/events/add-event'
import { Route as MainLayoutContactsImportContactRouteImport } from './routes/_mainLayout/contacts/importContact'
import { Route as MainLayoutContactsAddContactRouteImport } from './routes/_mainLayout/contacts/add-contact'
import { Route as MainLayoutOrganisationsOrganisation_idIndexRouteImport } from './routes/_mainLayout/organisations/$organisation_id/index'
import { Route as MainLayoutEventsCalendarIndexRouteImport } from './routes/_mainLayout/events/calendar/index'
import { Route as MainLayoutEventsEvent_idIndexRouteImport } from './routes/_mainLayout/events/$event_id/index'
import { Route as FormsForm_idFormLayoutForm_settingsRouteImport } from './routes/forms/$form_id/_formLayout/form_settings'
import { Route as FormsForm_idFormLayoutForm_previewRouteImport } from './routes/forms/$form_id/_formLayout/form_preview'
import { Route as FormsForm_idFormLayoutForm_builderRouteImport } from './routes/forms/$form_id/_formLayout/form_builder'
import { Route as FormsForm_idFormLayoutConditionsRouteImport } from './routes/forms/$form_id/_formLayout/conditions'
import { Route as MainLayoutUsersUser_idEditRouteImport } from './routes/_mainLayout/users/$user_id/edit'
import { Route as MainLayoutUsersUser_idUserViewLayoutRouteImport } from './routes/_mainLayout/users/$user_id/_userViewLayout'
import { Route as MainLayoutOrganisationsOrganisation_idEditRouteImport } from './routes/_mainLayout/organisations/$organisation_id/edit'
import { Route as MainLayoutContactsContact_idEditRouteImport } from './routes/_mainLayout/contacts/$contact_id/edit'
import { Route as MainLayoutContactsContact_idContactViewLayoutRouteImport } from './routes/_mainLayout/contacts/$contact_id/_contactViewLayout'
import { Route as MainLayoutUsersUser_idUserViewLayoutIndexRouteImport } from './routes/_mainLayout/users/$user_id/_userViewLayout/index'
import { Route as MainLayoutContactsContact_idContactViewLayoutIndexRouteImport } from './routes/_mainLayout/contacts/$contact_id/_contactViewLayout/index'

const FormsForm_idRouteImport = createFileRoute('/forms/$form_id')()
const MainLayoutUsersUser_idRouteImport = createFileRoute(
  '/_mainLayout/users/$user_id',
)()
const MainLayoutContactsContact_idRouteImport = createFileRoute(
  '/_mainLayout/contacts/$contact_id',
)()

const SigninRoute = SigninRouteImport.update({
  id: '/signin',
  path: '/signin',
  getParentRoute: () => rootRouteImport,
} as any)
const OrganizationLoadingRoute = OrganizationLoadingRouteImport.update({
  id: '/organization-loading',
  path: '/organization-loading',
  getParentRoute: () => rootRouteImport,
} as any)
const FormBuilderRoute = FormBuilderRouteImport.update({
  id: '/formBuilder',
  path: '/formBuilder',
  getParentRoute: () => rootRouteImport,
} as any)
const MainLayoutRoute = MainLayoutRouteImport.update({
  id: '/_mainLayout',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const FormsForm_idRoute = FormsForm_idRouteImport.update({
  id: '/forms/$form_id',
  path: '/forms/$form_id',
  getParentRoute: () => rootRouteImport,
} as any)
const JoinOrganizationIndexRoute = JoinOrganizationIndexRouteImport.update({
  id: '/join-organization/',
  path: '/join-organization/',
  getParentRoute: () => rootRouteImport,
} as any)
const FormsIndexRoute = FormsIndexRouteImport.update({
  id: '/forms/',
  path: '/forms/',
  getParentRoute: () => rootRouteImport,
} as any)
const ForgotPasswordIndexRoute = ForgotPasswordIndexRouteImport.update({
  id: '/forgot-password/',
  path: '/forgot-password/',
  getParentRoute: () => rootRouteImport,
} as any)
const JoinOrganizationVerifyRoute = JoinOrganizationVerifyRouteImport.update({
  id: '/join-organization/verify',
  path: '/join-organization/verify',
  getParentRoute: () => rootRouteImport,
} as any)
const ForgotPasswordVerifyRoute = ForgotPasswordVerifyRouteImport.update({
  id: '/forgot-password/verify',
  path: '/forgot-password/verify',
  getParentRoute: () => rootRouteImport,
} as any)
const MainLayoutUsersUser_idRoute = MainLayoutUsersUser_idRouteImport.update({
  id: '/users/$user_id',
  path: '/users/$user_id',
  getParentRoute: () => MainLayoutRoute,
} as any)
const MainLayoutContactsContact_idRoute =
  MainLayoutContactsContact_idRouteImport.update({
    id: '/contacts/$contact_id',
    path: '/contacts/$contact_id',
    getParentRoute: () => MainLayoutRoute,
  } as any)
const FormsForm_idIndexRoute = FormsForm_idIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => FormsForm_idRoute,
} as any)
const MainLayoutUsersIndexRoute = MainLayoutUsersIndexRouteImport.update({
  id: '/users/',
  path: '/users/',
  getParentRoute: () => MainLayoutRoute,
} as any)
const MainLayoutRegionsIndexRoute = MainLayoutRegionsIndexRouteImport.update({
  id: '/regions/',
  path: '/regions/',
  getParentRoute: () => MainLayoutRoute,
} as any)
const MainLayoutOrganisationsIndexRoute =
  MainLayoutOrganisationsIndexRouteImport.update({
    id: '/organisations/',
    path: '/organisations/',
    getParentRoute: () => MainLayoutRoute,
  } as any)
const MainLayoutEventsIndexRoute = MainLayoutEventsIndexRouteImport.update({
  id: '/events/',
  path: '/events/',
  getParentRoute: () => MainLayoutRoute,
} as any)
const MainLayoutContactsIndexRoute = MainLayoutContactsIndexRouteImport.update({
  id: '/contacts/',
  path: '/contacts/',
  getParentRoute: () => MainLayoutRoute,
} as any)
const FormsForm_idSuccessRoute = FormsForm_idSuccessRouteImport.update({
  id: '/success',
  path: '/success',
  getParentRoute: () => FormsForm_idRoute,
} as any)
const FormsForm_idFormLayoutRoute = FormsForm_idFormLayoutRouteImport.update({
  id: '/_formLayout',
  getParentRoute: () => FormsForm_idRoute,
} as any)
const MainLayoutUsersAddUserRoute = MainLayoutUsersAddUserRouteImport.update({
  id: '/users/add-user',
  path: '/users/add-user',
  getParentRoute: () => MainLayoutRoute,
} as any)
const MainLayoutOrganisationsAddOrganisationRoute =
  MainLayoutOrganisationsAddOrganisationRouteImport.update({
    id: '/organisations/add-organisation',
    path: '/organisations/add-organisation',
    getParentRoute: () => MainLayoutRoute,
  } as any)
const MainLayoutEventsAddEventRoute =
  MainLayoutEventsAddEventRouteImport.update({
    id: '/events/add-event',
    path: '/events/add-event',
    getParentRoute: () => MainLayoutRoute,
  } as any)
const MainLayoutContactsImportContactRoute =
  MainLayoutContactsImportContactRouteImport.update({
    id: '/contacts/importContact',
    path: '/contacts/importContact',
    getParentRoute: () => MainLayoutRoute,
  } as any)
const MainLayoutContactsAddContactRoute =
  MainLayoutContactsAddContactRouteImport.update({
    id: '/contacts/add-contact',
    path: '/contacts/add-contact',
    getParentRoute: () => MainLayoutRoute,
  } as any)
const MainLayoutOrganisationsOrganisation_idIndexRoute =
  MainLayoutOrganisationsOrganisation_idIndexRouteImport.update({
    id: '/organisations/$organisation_id/',
    path: '/organisations/$organisation_id/',
    getParentRoute: () => MainLayoutRoute,
  } as any)
const MainLayoutEventsCalendarIndexRoute =
  MainLayoutEventsCalendarIndexRouteImport.update({
    id: '/events/calendar/',
    path: '/events/calendar/',
    getParentRoute: () => MainLayoutRoute,
  } as any)
const MainLayoutEventsEvent_idIndexRoute =
  MainLayoutEventsEvent_idIndexRouteImport.update({
    id: '/events/$event_id/',
    path: '/events/$event_id/',
    getParentRoute: () => MainLayoutRoute,
  } as any)
const FormsForm_idFormLayoutForm_settingsRoute =
  FormsForm_idFormLayoutForm_settingsRouteImport.update({
    id: '/form_settings',
    path: '/form_settings',
    getParentRoute: () => FormsForm_idFormLayoutRoute,
  } as any)
const FormsForm_idFormLayoutForm_previewRoute =
  FormsForm_idFormLayoutForm_previewRouteImport.update({
    id: '/form_preview',
    path: '/form_preview',
    getParentRoute: () => FormsForm_idFormLayoutRoute,
  } as any)
const FormsForm_idFormLayoutForm_builderRoute =
  FormsForm_idFormLayoutForm_builderRouteImport.update({
    id: '/form_builder',
    path: '/form_builder',
    getParentRoute: () => FormsForm_idFormLayoutRoute,
  } as any)
const FormsForm_idFormLayoutConditionsRoute =
  FormsForm_idFormLayoutConditionsRouteImport.update({
    id: '/conditions',
    path: '/conditions',
    getParentRoute: () => FormsForm_idFormLayoutRoute,
  } as any)
const MainLayoutUsersUser_idEditRoute =
  MainLayoutUsersUser_idEditRouteImport.update({
    id: '/edit',
    path: '/edit',
    getParentRoute: () => MainLayoutUsersUser_idRoute,
  } as any)
const MainLayoutUsersUser_idUserViewLayoutRoute =
  MainLayoutUsersUser_idUserViewLayoutRouteImport.update({
    id: '/_userViewLayout',
    getParentRoute: () => MainLayoutUsersUser_idRoute,
  } as any)
const MainLayoutOrganisationsOrganisation_idEditRoute =
  MainLayoutOrganisationsOrganisation_idEditRouteImport.update({
    id: '/organisations/$organisation_id/edit',
    path: '/organisations/$organisation_id/edit',
    getParentRoute: () => MainLayoutRoute,
  } as any)
const MainLayoutContactsContact_idEditRoute =
  MainLayoutContactsContact_idEditRouteImport.update({
    id: '/edit',
    path: '/edit',
    getParentRoute: () => MainLayoutContactsContact_idRoute,
  } as any)
const MainLayoutContactsContact_idContactViewLayoutRoute =
  MainLayoutContactsContact_idContactViewLayoutRouteImport.update({
    id: '/_contactViewLayout',
    getParentRoute: () => MainLayoutContactsContact_idRoute,
  } as any)
const MainLayoutUsersUser_idUserViewLayoutIndexRoute =
  MainLayoutUsersUser_idUserViewLayoutIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => MainLayoutUsersUser_idUserViewLayoutRoute,
  } as any)
const MainLayoutContactsContact_idContactViewLayoutIndexRoute =
  MainLayoutContactsContact_idContactViewLayoutIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => MainLayoutContactsContact_idContactViewLayoutRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/formBuilder': typeof FormBuilderRoute
  '/organization-loading': typeof OrganizationLoadingRoute
  '/signin': typeof SigninRoute
  '/forgot-password/verify': typeof ForgotPasswordVerifyRoute
  '/join-organization/verify': typeof JoinOrganizationVerifyRoute
  '/forgot-password': typeof ForgotPasswordIndexRoute
  '/forms': typeof FormsIndexRoute
  '/join-organization': typeof JoinOrganizationIndexRoute
  '/contacts/add-contact': typeof MainLayoutContactsAddContactRoute
  '/contacts/importContact': typeof MainLayoutContactsImportContactRoute
  '/events/add-event': typeof MainLayoutEventsAddEventRoute
  '/organisations/add-organisation': typeof MainLayoutOrganisationsAddOrganisationRoute
  '/users/add-user': typeof MainLayoutUsersAddUserRoute
  '/forms/$form_id': typeof FormsForm_idFormLayoutRouteWithChildren
  '/forms/$form_id/success': typeof FormsForm_idSuccessRoute
  '/contacts': typeof MainLayoutContactsIndexRoute
  '/events': typeof MainLayoutEventsIndexRoute
  '/organisations': typeof MainLayoutOrganisationsIndexRoute
  '/regions': typeof MainLayoutRegionsIndexRoute
  '/users': typeof MainLayoutUsersIndexRoute
  '/forms/$form_id/': typeof FormsForm_idIndexRoute
  '/contacts/$contact_id': typeof MainLayoutContactsContact_idContactViewLayoutRouteWithChildren
  '/contacts/$contact_id/edit': typeof MainLayoutContactsContact_idEditRoute
  '/organisations/$organisation_id/edit': typeof MainLayoutOrganisationsOrganisation_idEditRoute
  '/users/$user_id': typeof MainLayoutUsersUser_idUserViewLayoutRouteWithChildren
  '/users/$user_id/edit': typeof MainLayoutUsersUser_idEditRoute
  '/forms/$form_id/conditions': typeof FormsForm_idFormLayoutConditionsRoute
  '/forms/$form_id/form_builder': typeof FormsForm_idFormLayoutForm_builderRoute
  '/forms/$form_id/form_preview': typeof FormsForm_idFormLayoutForm_previewRoute
  '/forms/$form_id/form_settings': typeof FormsForm_idFormLayoutForm_settingsRoute
  '/events/$event_id': typeof MainLayoutEventsEvent_idIndexRoute
  '/events/calendar': typeof MainLayoutEventsCalendarIndexRoute
  '/organisations/$organisation_id': typeof MainLayoutOrganisationsOrganisation_idIndexRoute
  '/contacts/$contact_id/': typeof MainLayoutContactsContact_idContactViewLayoutIndexRoute
  '/users/$user_id/': typeof MainLayoutUsersUser_idUserViewLayoutIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/formBuilder': typeof FormBuilderRoute
  '/organization-loading': typeof OrganizationLoadingRoute
  '/signin': typeof SigninRoute
  '/forgot-password/verify': typeof ForgotPasswordVerifyRoute
  '/join-organization/verify': typeof JoinOrganizationVerifyRoute
  '/forgot-password': typeof ForgotPasswordIndexRoute
  '/forms': typeof FormsIndexRoute
  '/join-organization': typeof JoinOrganizationIndexRoute
  '/contacts/add-contact': typeof MainLayoutContactsAddContactRoute
  '/contacts/importContact': typeof MainLayoutContactsImportContactRoute
  '/events/add-event': typeof MainLayoutEventsAddEventRoute
  '/organisations/add-organisation': typeof MainLayoutOrganisationsAddOrganisationRoute
  '/users/add-user': typeof MainLayoutUsersAddUserRoute
  '/forms/$form_id': typeof FormsForm_idIndexRoute
  '/forms/$form_id/success': typeof FormsForm_idSuccessRoute
  '/contacts': typeof MainLayoutContactsIndexRoute
  '/events': typeof MainLayoutEventsIndexRoute
  '/organisations': typeof MainLayoutOrganisationsIndexRoute
  '/regions': typeof MainLayoutRegionsIndexRoute
  '/users': typeof MainLayoutUsersIndexRoute
  '/contacts/$contact_id': typeof MainLayoutContactsContact_idContactViewLayoutIndexRoute
  '/contacts/$contact_id/edit': typeof MainLayoutContactsContact_idEditRoute
  '/organisations/$organisation_id/edit': typeof MainLayoutOrganisationsOrganisation_idEditRoute
  '/users/$user_id': typeof MainLayoutUsersUser_idUserViewLayoutIndexRoute
  '/users/$user_id/edit': typeof MainLayoutUsersUser_idEditRoute
  '/forms/$form_id/conditions': typeof FormsForm_idFormLayoutConditionsRoute
  '/forms/$form_id/form_builder': typeof FormsForm_idFormLayoutForm_builderRoute
  '/forms/$form_id/form_preview': typeof FormsForm_idFormLayoutForm_previewRoute
  '/forms/$form_id/form_settings': typeof FormsForm_idFormLayoutForm_settingsRoute
  '/events/$event_id': typeof MainLayoutEventsEvent_idIndexRoute
  '/events/calendar': typeof MainLayoutEventsCalendarIndexRoute
  '/organisations/$organisation_id': typeof MainLayoutOrganisationsOrganisation_idIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_mainLayout': typeof MainLayoutRouteWithChildren
  '/formBuilder': typeof FormBuilderRoute
  '/organization-loading': typeof OrganizationLoadingRoute
  '/signin': typeof SigninRoute
  '/forgot-password/verify': typeof ForgotPasswordVerifyRoute
  '/join-organization/verify': typeof JoinOrganizationVerifyRoute
  '/forgot-password/': typeof ForgotPasswordIndexRoute
  '/forms/': typeof FormsIndexRoute
  '/join-organization/': typeof JoinOrganizationIndexRoute
  '/_mainLayout/contacts/add-contact': typeof MainLayoutContactsAddContactRoute
  '/_mainLayout/contacts/importContact': typeof MainLayoutContactsImportContactRoute
  '/_mainLayout/events/add-event': typeof MainLayoutEventsAddEventRoute
  '/_mainLayout/organisations/add-organisation': typeof MainLayoutOrganisationsAddOrganisationRoute
  '/_mainLayout/users/add-user': typeof MainLayoutUsersAddUserRoute
  '/forms/$form_id': typeof FormsForm_idRouteWithChildren
  '/forms/$form_id/_formLayout': typeof FormsForm_idFormLayoutRouteWithChildren
  '/forms/$form_id/success': typeof FormsForm_idSuccessRoute
  '/_mainLayout/contacts/': typeof MainLayoutContactsIndexRoute
  '/_mainLayout/events/': typeof MainLayoutEventsIndexRoute
  '/_mainLayout/organisations/': typeof MainLayoutOrganisationsIndexRoute
  '/_mainLayout/regions/': typeof MainLayoutRegionsIndexRoute
  '/_mainLayout/users/': typeof MainLayoutUsersIndexRoute
  '/forms/$form_id/': typeof FormsForm_idIndexRoute
  '/_mainLayout/contacts/$contact_id': typeof MainLayoutContactsContact_idRouteWithChildren
  '/_mainLayout/contacts/$contact_id/_contactViewLayout': typeof MainLayoutContactsContact_idContactViewLayoutRouteWithChildren
  '/_mainLayout/contacts/$contact_id/edit': typeof MainLayoutContactsContact_idEditRoute
  '/_mainLayout/organisations/$organisation_id/edit': typeof MainLayoutOrganisationsOrganisation_idEditRoute
  '/_mainLayout/users/$user_id': typeof MainLayoutUsersUser_idRouteWithChildren
  '/_mainLayout/users/$user_id/_userViewLayout': typeof MainLayoutUsersUser_idUserViewLayoutRouteWithChildren
  '/_mainLayout/users/$user_id/edit': typeof MainLayoutUsersUser_idEditRoute
  '/forms/$form_id/_formLayout/conditions': typeof FormsForm_idFormLayoutConditionsRoute
  '/forms/$form_id/_formLayout/form_builder': typeof FormsForm_idFormLayoutForm_builderRoute
  '/forms/$form_id/_formLayout/form_preview': typeof FormsForm_idFormLayoutForm_previewRoute
  '/forms/$form_id/_formLayout/form_settings': typeof FormsForm_idFormLayoutForm_settingsRoute
  '/_mainLayout/events/$event_id/': typeof MainLayoutEventsEvent_idIndexRoute
  '/_mainLayout/events/calendar/': typeof MainLayoutEventsCalendarIndexRoute
  '/_mainLayout/organisations/$organisation_id/': typeof MainLayoutOrganisationsOrganisation_idIndexRoute
  '/_mainLayout/contacts/$contact_id/_contactViewLayout/': typeof MainLayoutContactsContact_idContactViewLayoutIndexRoute
  '/_mainLayout/users/$user_id/_userViewLayout/': typeof MainLayoutUsersUser_idUserViewLayoutIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/formBuilder'
    | '/organization-loading'
    | '/signin'
    | '/forgot-password/verify'
    | '/join-organization/verify'
    | '/forgot-password'
    | '/forms'
    | '/join-organization'
    | '/contacts/add-contact'
    | '/contacts/importContact'
    | '/events/add-event'
    | '/organisations/add-organisation'
    | '/users/add-user'
    | '/forms/$form_id'
    | '/forms/$form_id/success'
    | '/contacts'
    | '/events'
    | '/organisations'
    | '/regions'
    | '/users'
    | '/forms/$form_id/'
    | '/contacts/$contact_id'
    | '/contacts/$contact_id/edit'
    | '/organisations/$organisation_id/edit'
    | '/users/$user_id'
    | '/users/$user_id/edit'
    | '/forms/$form_id/conditions'
    | '/forms/$form_id/form_builder'
    | '/forms/$form_id/form_preview'
    | '/forms/$form_id/form_settings'
    | '/events/$event_id'
    | '/events/calendar'
    | '/organisations/$organisation_id'
    | '/contacts/$contact_id/'
    | '/users/$user_id/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/formBuilder'
    | '/organization-loading'
    | '/signin'
    | '/forgot-password/verify'
    | '/join-organization/verify'
    | '/forgot-password'
    | '/forms'
    | '/join-organization'
    | '/contacts/add-contact'
    | '/contacts/importContact'
    | '/events/add-event'
    | '/organisations/add-organisation'
    | '/users/add-user'
    | '/forms/$form_id'
    | '/forms/$form_id/success'
    | '/contacts'
    | '/events'
    | '/organisations'
    | '/regions'
    | '/users'
    | '/contacts/$contact_id'
    | '/contacts/$contact_id/edit'
    | '/organisations/$organisation_id/edit'
    | '/users/$user_id'
    | '/users/$user_id/edit'
    | '/forms/$form_id/conditions'
    | '/forms/$form_id/form_builder'
    | '/forms/$form_id/form_preview'
    | '/forms/$form_id/form_settings'
    | '/events/$event_id'
    | '/events/calendar'
    | '/organisations/$organisation_id'
  id:
    | '__root__'
    | '/'
    | '/_mainLayout'
    | '/formBuilder'
    | '/organization-loading'
    | '/signin'
    | '/forgot-password/verify'
    | '/join-organization/verify'
    | '/forgot-password/'
    | '/forms/'
    | '/join-organization/'
    | '/_mainLayout/contacts/add-contact'
    | '/_mainLayout/contacts/importContact'
    | '/_mainLayout/events/add-event'
    | '/_mainLayout/organisations/add-organisation'
    | '/_mainLayout/users/add-user'
    | '/forms/$form_id'
    | '/forms/$form_id/_formLayout'
    | '/forms/$form_id/success'
    | '/_mainLayout/contacts/'
    | '/_mainLayout/events/'
    | '/_mainLayout/organisations/'
    | '/_mainLayout/regions/'
    | '/_mainLayout/users/'
    | '/forms/$form_id/'
    | '/_mainLayout/contacts/$contact_id'
    | '/_mainLayout/contacts/$contact_id/_contactViewLayout'
    | '/_mainLayout/contacts/$contact_id/edit'
    | '/_mainLayout/organisations/$organisation_id/edit'
    | '/_mainLayout/users/$user_id'
    | '/_mainLayout/users/$user_id/_userViewLayout'
    | '/_mainLayout/users/$user_id/edit'
    | '/forms/$form_id/_formLayout/conditions'
    | '/forms/$form_id/_formLayout/form_builder'
    | '/forms/$form_id/_formLayout/form_preview'
    | '/forms/$form_id/_formLayout/form_settings'
    | '/_mainLayout/events/$event_id/'
    | '/_mainLayout/events/calendar/'
    | '/_mainLayout/organisations/$organisation_id/'
    | '/_mainLayout/contacts/$contact_id/_contactViewLayout/'
    | '/_mainLayout/users/$user_id/_userViewLayout/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  MainLayoutRoute: typeof MainLayoutRouteWithChildren
  FormBuilderRoute: typeof FormBuilderRoute
  OrganizationLoadingRoute: typeof OrganizationLoadingRoute
  SigninRoute: typeof SigninRoute
  ForgotPasswordVerifyRoute: typeof ForgotPasswordVerifyRoute
  JoinOrganizationVerifyRoute: typeof JoinOrganizationVerifyRoute
  ForgotPasswordIndexRoute: typeof ForgotPasswordIndexRoute
  FormsIndexRoute: typeof FormsIndexRoute
  JoinOrganizationIndexRoute: typeof JoinOrganizationIndexRoute
  FormsForm_idRoute: typeof FormsForm_idRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/signin': {
      id: '/signin'
      path: '/signin'
      fullPath: '/signin'
      preLoaderRoute: typeof SigninRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/organization-loading': {
      id: '/organization-loading'
      path: '/organization-loading'
      fullPath: '/organization-loading'
      preLoaderRoute: typeof OrganizationLoadingRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/formBuilder': {
      id: '/formBuilder'
      path: '/formBuilder'
      fullPath: '/formBuilder'
      preLoaderRoute: typeof FormBuilderRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_mainLayout': {
      id: '/_mainLayout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof MainLayoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/forms/$form_id': {
      id: '/forms/$form_id'
      path: '/forms/$form_id'
      fullPath: '/forms/$form_id'
      preLoaderRoute: typeof FormsForm_idRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/join-organization/': {
      id: '/join-organization/'
      path: '/join-organization'
      fullPath: '/join-organization'
      preLoaderRoute: typeof JoinOrganizationIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/forms/': {
      id: '/forms/'
      path: '/forms'
      fullPath: '/forms'
      preLoaderRoute: typeof FormsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/forgot-password/': {
      id: '/forgot-password/'
      path: '/forgot-password'
      fullPath: '/forgot-password'
      preLoaderRoute: typeof ForgotPasswordIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/join-organization/verify': {
      id: '/join-organization/verify'
      path: '/join-organization/verify'
      fullPath: '/join-organization/verify'
      preLoaderRoute: typeof JoinOrganizationVerifyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/forgot-password/verify': {
      id: '/forgot-password/verify'
      path: '/forgot-password/verify'
      fullPath: '/forgot-password/verify'
      preLoaderRoute: typeof ForgotPasswordVerifyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_mainLayout/users/$user_id': {
      id: '/_mainLayout/users/$user_id'
      path: '/users/$user_id'
      fullPath: '/users/$user_id'
      preLoaderRoute: typeof MainLayoutUsersUser_idRouteImport
      parentRoute: typeof MainLayoutRoute
    }
    '/_mainLayout/contacts/$contact_id': {
      id: '/_mainLayout/contacts/$contact_id'
      path: '/contacts/$contact_id'
      fullPath: '/contacts/$contact_id'
      preLoaderRoute: typeof MainLayoutContactsContact_idRouteImport
      parentRoute: typeof MainLayoutRoute
    }
    '/forms/$form_id/': {
      id: '/forms/$form_id/'
      path: '/'
      fullPath: '/forms/$form_id/'
      preLoaderRoute: typeof FormsForm_idIndexRouteImport
      parentRoute: typeof FormsForm_idRoute
    }
    '/_mainLayout/users/': {
      id: '/_mainLayout/users/'
      path: '/users'
      fullPath: '/users'
      preLoaderRoute: typeof MainLayoutUsersIndexRouteImport
      parentRoute: typeof MainLayoutRoute
    }
    '/_mainLayout/regions/': {
      id: '/_mainLayout/regions/'
      path: '/regions'
      fullPath: '/regions'
      preLoaderRoute: typeof MainLayoutRegionsIndexRouteImport
      parentRoute: typeof MainLayoutRoute
    }
    '/_mainLayout/organisations/': {
      id: '/_mainLayout/organisations/'
      path: '/organisations'
      fullPath: '/organisations'
      preLoaderRoute: typeof MainLayoutOrganisationsIndexRouteImport
      parentRoute: typeof MainLayoutRoute
    }
    '/_mainLayout/events/': {
      id: '/_mainLayout/events/'
      path: '/events'
      fullPath: '/events'
      preLoaderRoute: typeof MainLayoutEventsIndexRouteImport
      parentRoute: typeof MainLayoutRoute
    }
    '/_mainLayout/contacts/': {
      id: '/_mainLayout/contacts/'
      path: '/contacts'
      fullPath: '/contacts'
      preLoaderRoute: typeof MainLayoutContactsIndexRouteImport
      parentRoute: typeof MainLayoutRoute
    }
    '/forms/$form_id/success': {
      id: '/forms/$form_id/success'
      path: '/success'
      fullPath: '/forms/$form_id/success'
      preLoaderRoute: typeof FormsForm_idSuccessRouteImport
      parentRoute: typeof FormsForm_idRoute
    }
    '/forms/$form_id/_formLayout': {
      id: '/forms/$form_id/_formLayout'
      path: '/forms/$form_id'
      fullPath: '/forms/$form_id'
      preLoaderRoute: typeof FormsForm_idFormLayoutRouteImport
      parentRoute: typeof FormsForm_idRoute
    }
    '/_mainLayout/users/add-user': {
      id: '/_mainLayout/users/add-user'
      path: '/users/add-user'
      fullPath: '/users/add-user'
      preLoaderRoute: typeof MainLayoutUsersAddUserRouteImport
      parentRoute: typeof MainLayoutRoute
    }
    '/_mainLayout/organisations/add-organisation': {
      id: '/_mainLayout/organisations/add-organisation'
      path: '/organisations/add-organisation'
      fullPath: '/organisations/add-organisation'
      preLoaderRoute: typeof MainLayoutOrganisationsAddOrganisationRouteImport
      parentRoute: typeof MainLayoutRoute
    }
    '/_mainLayout/events/add-event': {
      id: '/_mainLayout/events/add-event'
      path: '/events/add-event'
      fullPath: '/events/add-event'
      preLoaderRoute: typeof MainLayoutEventsAddEventRouteImport
      parentRoute: typeof MainLayoutRoute
    }
    '/_mainLayout/contacts/importContact': {
      id: '/_mainLayout/contacts/importContact'
      path: '/contacts/importContact'
      fullPath: '/contacts/importContact'
      preLoaderRoute: typeof MainLayoutContactsImportContactRouteImport
      parentRoute: typeof MainLayoutRoute
    }
    '/_mainLayout/contacts/add-contact': {
      id: '/_mainLayout/contacts/add-contact'
      path: '/contacts/add-contact'
      fullPath: '/contacts/add-contact'
      preLoaderRoute: typeof MainLayoutContactsAddContactRouteImport
      parentRoute: typeof MainLayoutRoute
    }
    '/_mainLayout/organisations/$organisation_id/': {
      id: '/_mainLayout/organisations/$organisation_id/'
      path: '/organisations/$organisation_id'
      fullPath: '/organisations/$organisation_id'
      preLoaderRoute: typeof MainLayoutOrganisationsOrganisation_idIndexRouteImport
      parentRoute: typeof MainLayoutRoute
    }
    '/_mainLayout/events/calendar/': {
      id: '/_mainLayout/events/calendar/'
      path: '/events/calendar'
      fullPath: '/events/calendar'
      preLoaderRoute: typeof MainLayoutEventsCalendarIndexRouteImport
      parentRoute: typeof MainLayoutRoute
    }
    '/_mainLayout/events/$event_id/': {
      id: '/_mainLayout/events/$event_id/'
      path: '/events/$event_id'
      fullPath: '/events/$event_id'
      preLoaderRoute: typeof MainLayoutEventsEvent_idIndexRouteImport
      parentRoute: typeof MainLayoutRoute
    }
    '/forms/$form_id/_formLayout/form_settings': {
      id: '/forms/$form_id/_formLayout/form_settings'
      path: '/form_settings'
      fullPath: '/forms/$form_id/form_settings'
      preLoaderRoute: typeof FormsForm_idFormLayoutForm_settingsRouteImport
      parentRoute: typeof FormsForm_idFormLayoutRoute
    }
    '/forms/$form_id/_formLayout/form_preview': {
      id: '/forms/$form_id/_formLayout/form_preview'
      path: '/form_preview'
      fullPath: '/forms/$form_id/form_preview'
      preLoaderRoute: typeof FormsForm_idFormLayoutForm_previewRouteImport
      parentRoute: typeof FormsForm_idFormLayoutRoute
    }
    '/forms/$form_id/_formLayout/form_builder': {
      id: '/forms/$form_id/_formLayout/form_builder'
      path: '/form_builder'
      fullPath: '/forms/$form_id/form_builder'
      preLoaderRoute: typeof FormsForm_idFormLayoutForm_builderRouteImport
      parentRoute: typeof FormsForm_idFormLayoutRoute
    }
    '/forms/$form_id/_formLayout/conditions': {
      id: '/forms/$form_id/_formLayout/conditions'
      path: '/conditions'
      fullPath: '/forms/$form_id/conditions'
      preLoaderRoute: typeof FormsForm_idFormLayoutConditionsRouteImport
      parentRoute: typeof FormsForm_idFormLayoutRoute
    }
    '/_mainLayout/users/$user_id/edit': {
      id: '/_mainLayout/users/$user_id/edit'
      path: '/edit'
      fullPath: '/users/$user_id/edit'
      preLoaderRoute: typeof MainLayoutUsersUser_idEditRouteImport
      parentRoute: typeof MainLayoutUsersUser_idRoute
    }
    '/_mainLayout/users/$user_id/_userViewLayout': {
      id: '/_mainLayout/users/$user_id/_userViewLayout'
      path: '/users/$user_id'
      fullPath: '/users/$user_id'
      preLoaderRoute: typeof MainLayoutUsersUser_idUserViewLayoutRouteImport
      parentRoute: typeof MainLayoutUsersUser_idRoute
    }
    '/_mainLayout/organisations/$organisation_id/edit': {
      id: '/_mainLayout/organisations/$organisation_id/edit'
      path: '/organisations/$organisation_id/edit'
      fullPath: '/organisations/$organisation_id/edit'
      preLoaderRoute: typeof MainLayoutOrganisationsOrganisation_idEditRouteImport
      parentRoute: typeof MainLayoutRoute
    }
    '/_mainLayout/contacts/$contact_id/edit': {
      id: '/_mainLayout/contacts/$contact_id/edit'
      path: '/edit'
      fullPath: '/contacts/$contact_id/edit'
      preLoaderRoute: typeof MainLayoutContactsContact_idEditRouteImport
      parentRoute: typeof MainLayoutContactsContact_idRoute
    }
    '/_mainLayout/contacts/$contact_id/_contactViewLayout': {
      id: '/_mainLayout/contacts/$contact_id/_contactViewLayout'
      path: '/contacts/$contact_id'
      fullPath: '/contacts/$contact_id'
      preLoaderRoute: typeof MainLayoutContactsContact_idContactViewLayoutRouteImport
      parentRoute: typeof MainLayoutContactsContact_idRoute
    }
    '/_mainLayout/users/$user_id/_userViewLayout/': {
      id: '/_mainLayout/users/$user_id/_userViewLayout/'
      path: '/'
      fullPath: '/users/$user_id/'
      preLoaderRoute: typeof MainLayoutUsersUser_idUserViewLayoutIndexRouteImport
      parentRoute: typeof MainLayoutUsersUser_idUserViewLayoutRoute
    }
    '/_mainLayout/contacts/$contact_id/_contactViewLayout/': {
      id: '/_mainLayout/contacts/$contact_id/_contactViewLayout/'
      path: '/'
      fullPath: '/contacts/$contact_id/'
      preLoaderRoute: typeof MainLayoutContactsContact_idContactViewLayoutIndexRouteImport
      parentRoute: typeof MainLayoutContactsContact_idContactViewLayoutRoute
    }
  }
}

interface MainLayoutContactsContact_idContactViewLayoutRouteChildren {
  MainLayoutContactsContact_idContactViewLayoutIndexRoute: typeof MainLayoutContactsContact_idContactViewLayoutIndexRoute
}

const MainLayoutContactsContact_idContactViewLayoutRouteChildren: MainLayoutContactsContact_idContactViewLayoutRouteChildren =
  {
    MainLayoutContactsContact_idContactViewLayoutIndexRoute:
      MainLayoutContactsContact_idContactViewLayoutIndexRoute,
  }

const MainLayoutContactsContact_idContactViewLayoutRouteWithChildren =
  MainLayoutContactsContact_idContactViewLayoutRoute._addFileChildren(
    MainLayoutContactsContact_idContactViewLayoutRouteChildren,
  )

interface MainLayoutContactsContact_idRouteChildren {
  MainLayoutContactsContact_idContactViewLayoutRoute: typeof MainLayoutContactsContact_idContactViewLayoutRouteWithChildren
  MainLayoutContactsContact_idEditRoute: typeof MainLayoutContactsContact_idEditRoute
}

const MainLayoutContactsContact_idRouteChildren: MainLayoutContactsContact_idRouteChildren =
  {
    MainLayoutContactsContact_idContactViewLayoutRoute:
      MainLayoutContactsContact_idContactViewLayoutRouteWithChildren,
    MainLayoutContactsContact_idEditRoute:
      MainLayoutContactsContact_idEditRoute,
  }

const MainLayoutContactsContact_idRouteWithChildren =
  MainLayoutContactsContact_idRoute._addFileChildren(
    MainLayoutContactsContact_idRouteChildren,
  )

interface MainLayoutUsersUser_idUserViewLayoutRouteChildren {
  MainLayoutUsersUser_idUserViewLayoutIndexRoute: typeof MainLayoutUsersUser_idUserViewLayoutIndexRoute
}

const MainLayoutUsersUser_idUserViewLayoutRouteChildren: MainLayoutUsersUser_idUserViewLayoutRouteChildren =
  {
    MainLayoutUsersUser_idUserViewLayoutIndexRoute:
      MainLayoutUsersUser_idUserViewLayoutIndexRoute,
  }

const MainLayoutUsersUser_idUserViewLayoutRouteWithChildren =
  MainLayoutUsersUser_idUserViewLayoutRoute._addFileChildren(
    MainLayoutUsersUser_idUserViewLayoutRouteChildren,
  )

interface MainLayoutUsersUser_idRouteChildren {
  MainLayoutUsersUser_idUserViewLayoutRoute: typeof MainLayoutUsersUser_idUserViewLayoutRouteWithChildren
  MainLayoutUsersUser_idEditRoute: typeof MainLayoutUsersUser_idEditRoute
}

const MainLayoutUsersUser_idRouteChildren: MainLayoutUsersUser_idRouteChildren =
  {
    MainLayoutUsersUser_idUserViewLayoutRoute:
      MainLayoutUsersUser_idUserViewLayoutRouteWithChildren,
    MainLayoutUsersUser_idEditRoute: MainLayoutUsersUser_idEditRoute,
  }

const MainLayoutUsersUser_idRouteWithChildren =
  MainLayoutUsersUser_idRoute._addFileChildren(
    MainLayoutUsersUser_idRouteChildren,
  )

interface MainLayoutRouteChildren {
  MainLayoutContactsAddContactRoute: typeof MainLayoutContactsAddContactRoute
  MainLayoutContactsImportContactRoute: typeof MainLayoutContactsImportContactRoute
  MainLayoutEventsAddEventRoute: typeof MainLayoutEventsAddEventRoute
  MainLayoutOrganisationsAddOrganisationRoute: typeof MainLayoutOrganisationsAddOrganisationRoute
  MainLayoutUsersAddUserRoute: typeof MainLayoutUsersAddUserRoute
  MainLayoutContactsIndexRoute: typeof MainLayoutContactsIndexRoute
  MainLayoutEventsIndexRoute: typeof MainLayoutEventsIndexRoute
  MainLayoutOrganisationsIndexRoute: typeof MainLayoutOrganisationsIndexRoute
  MainLayoutRegionsIndexRoute: typeof MainLayoutRegionsIndexRoute
  MainLayoutUsersIndexRoute: typeof MainLayoutUsersIndexRoute
  MainLayoutContactsContact_idRoute: typeof MainLayoutContactsContact_idRouteWithChildren
  MainLayoutOrganisationsOrganisation_idEditRoute: typeof MainLayoutOrganisationsOrganisation_idEditRoute
  MainLayoutUsersUser_idRoute: typeof MainLayoutUsersUser_idRouteWithChildren
  MainLayoutEventsEvent_idIndexRoute: typeof MainLayoutEventsEvent_idIndexRoute
  MainLayoutEventsCalendarIndexRoute: typeof MainLayoutEventsCalendarIndexRoute
  MainLayoutOrganisationsOrganisation_idIndexRoute: typeof MainLayoutOrganisationsOrganisation_idIndexRoute
}

const MainLayoutRouteChildren: MainLayoutRouteChildren = {
  MainLayoutContactsAddContactRoute: MainLayoutContactsAddContactRoute,
  MainLayoutContactsImportContactRoute: MainLayoutContactsImportContactRoute,
  MainLayoutEventsAddEventRoute: MainLayoutEventsAddEventRoute,
  MainLayoutOrganisationsAddOrganisationRoute:
    MainLayoutOrganisationsAddOrganisationRoute,
  MainLayoutUsersAddUserRoute: MainLayoutUsersAddUserRoute,
  MainLayoutContactsIndexRoute: MainLayoutContactsIndexRoute,
  MainLayoutEventsIndexRoute: MainLayoutEventsIndexRoute,
  MainLayoutOrganisationsIndexRoute: MainLayoutOrganisationsIndexRoute,
  MainLayoutRegionsIndexRoute: MainLayoutRegionsIndexRoute,
  MainLayoutUsersIndexRoute: MainLayoutUsersIndexRoute,
  MainLayoutContactsContact_idRoute:
    MainLayoutContactsContact_idRouteWithChildren,
  MainLayoutOrganisationsOrganisation_idEditRoute:
    MainLayoutOrganisationsOrganisation_idEditRoute,
  MainLayoutUsersUser_idRoute: MainLayoutUsersUser_idRouteWithChildren,
  MainLayoutEventsEvent_idIndexRoute: MainLayoutEventsEvent_idIndexRoute,
  MainLayoutEventsCalendarIndexRoute: MainLayoutEventsCalendarIndexRoute,
  MainLayoutOrganisationsOrganisation_idIndexRoute:
    MainLayoutOrganisationsOrganisation_idIndexRoute,
}

const MainLayoutRouteWithChildren = MainLayoutRoute._addFileChildren(
  MainLayoutRouteChildren,
)

interface FormsForm_idFormLayoutRouteChildren {
  FormsForm_idFormLayoutConditionsRoute: typeof FormsForm_idFormLayoutConditionsRoute
  FormsForm_idFormLayoutForm_builderRoute: typeof FormsForm_idFormLayoutForm_builderRoute
  FormsForm_idFormLayoutForm_previewRoute: typeof FormsForm_idFormLayoutForm_previewRoute
  FormsForm_idFormLayoutForm_settingsRoute: typeof FormsForm_idFormLayoutForm_settingsRoute
}

const FormsForm_idFormLayoutRouteChildren: FormsForm_idFormLayoutRouteChildren =
  {
    FormsForm_idFormLayoutConditionsRoute:
      FormsForm_idFormLayoutConditionsRoute,
    FormsForm_idFormLayoutForm_builderRoute:
      FormsForm_idFormLayoutForm_builderRoute,
    FormsForm_idFormLayoutForm_previewRoute:
      FormsForm_idFormLayoutForm_previewRoute,
    FormsForm_idFormLayoutForm_settingsRoute:
      FormsForm_idFormLayoutForm_settingsRoute,
  }

const FormsForm_idFormLayoutRouteWithChildren =
  FormsForm_idFormLayoutRoute._addFileChildren(
    FormsForm_idFormLayoutRouteChildren,
  )

interface FormsForm_idRouteChildren {
  FormsForm_idFormLayoutRoute: typeof FormsForm_idFormLayoutRouteWithChildren
  FormsForm_idSuccessRoute: typeof FormsForm_idSuccessRoute
  FormsForm_idIndexRoute: typeof FormsForm_idIndexRoute
}

const FormsForm_idRouteChildren: FormsForm_idRouteChildren = {
  FormsForm_idFormLayoutRoute: FormsForm_idFormLayoutRouteWithChildren,
  FormsForm_idSuccessRoute: FormsForm_idSuccessRoute,
  FormsForm_idIndexRoute: FormsForm_idIndexRoute,
}

const FormsForm_idRouteWithChildren = FormsForm_idRoute._addFileChildren(
  FormsForm_idRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  MainLayoutRoute: MainLayoutRouteWithChildren,
  FormBuilderRoute: FormBuilderRoute,
  OrganizationLoadingRoute: OrganizationLoadingRoute,
  SigninRoute: SigninRoute,
  ForgotPasswordVerifyRoute: ForgotPasswordVerifyRoute,
  JoinOrganizationVerifyRoute: JoinOrganizationVerifyRoute,
  ForgotPasswordIndexRoute: ForgotPasswordIndexRoute,
  FormsIndexRoute: FormsIndexRoute,
  JoinOrganizationIndexRoute: JoinOrganizationIndexRoute,
  FormsForm_idRoute: FormsForm_idRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

import type { getRouter } from './router.tsx'
import type { createStart } from '@tanstack/react-start'
declare module '@tanstack/react-start' {
  interface Register {
    ssr: true
    router: Awaited<ReturnType<typeof getRouter>>
  }
}
